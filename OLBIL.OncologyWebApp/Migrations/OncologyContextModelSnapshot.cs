// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OLBIL.OncologyData;

namespace OLBIL.OncologyWebApp.Migrations
{
    [DbContext(typeof(OncologyContext))]
    partial class OncologyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.AppUser", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PatientId");

                    b.Property<int>("Status");

                    b.HasKey("AppointmentId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.HealthProfessional", b =>
                {
                    b.Property<int>("HealthProfessionalId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("PersonId");

                    b.HasKey("HealthProfessionalId");

                    b.HasIndex("PersonId");

                    b.ToTable("HealthProfessionals");
                });

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.OncologyPatient", b =>
                {
                    b.Property<int>("OncologyPatientId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AdmissionDate");

                    b.Property<string>("InformantsRelationship");

                    b.Property<Guid?>("PersonId");

                    b.Property<string>("ReasonForReferral");

                    b.Property<DateTime?>("RegistrationDate");

                    b.HasKey("OncologyPatientId");

                    b.HasIndex("PersonId");

                    b.ToTable("OncologyPatients");
                });

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalLastName");

                    b.Property<string>("Address");

                    b.Property<string>("AddressLine2");

                    b.Property<Guid?>("AppUserId");

                    b.Property<DateTime?>("Birthdate");

                    b.Property<string>("Birthplace");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("FamilyStatus");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("GovernmentIDNumber");

                    b.Property<string>("HomePhone");

                    b.Property<string>("LastName");

                    b.Property<string>("MethodOfTranspotation");

                    b.Property<string>("MiddleName");

                    b.Property<string>("MobilePhone");

                    b.Property<string>("Nationality");

                    b.Property<string>("PreferredName");

                    b.Property<string>("Race");

                    b.Property<string>("SchoolLevel");

                    b.Property<string>("State");

                    b.HasKey("PersonId");

                    b.HasIndex("AppUserId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.Appointment", b =>
                {
                    b.HasOne("OLBIL.OncologyWebApp.Entities.OncologyPatient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.HealthProfessional", b =>
                {
                    b.HasOne("OLBIL.OncologyWebApp.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.OncologyPatient", b =>
                {
                    b.HasOne("OLBIL.OncologyWebApp.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("OLBIL.OncologyWebApp.Entities.Person", b =>
                {
                    b.HasOne("OLBIL.OncologyWebApp.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
